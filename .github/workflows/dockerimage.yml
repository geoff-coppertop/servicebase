name: Base Service Build/Publish

on:
    pull_request:
        branches:
            - master
    push:
        branches:
            - master
        tags:
            - v*

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            -   name: Checkout
                uses: actions/checkout@v2

            -   name: Prepare
                id: prepare
                run: |
                    DOCKER_IMAGE=coppertopgeoff/servicebase
                    DOCKER_PLATFORMS=linux/arm/v7
                    VERSION=edge

                    if [[ $GITHUB_REF == refs/tags/* ]]; then
                        VERSION=${GITHUB_REF#refs/tags/v}
                    fi

                    if [ "${{ github.event_name }}" = "schedule" ]; then
                        VERSION=nightly
                    fi

                    TAGS="--tag ${DOCKER_IMAGE}:${VERSION}"
                    if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
                        TAGS="$TAGS --tag ${DOCKER_IMAGE}:latest"
                    fi

                    echo ::set-output name=docker_image::${DOCKER_IMAGE}
                    echo ::set-output name=version::${VERSION}
                    echo ::set-output name=buildx_args::--platform ${DOCKER_PLATFORMS} \
                        ${TAGS} --file ./Dockerfile .

            -   name: Set up Docker Buildx
                uses: crazy-max/ghaction-docker-buildx@v3

            -   name: Cache Docker layers
                uses: actions/cache@v2
                id: cache
                with:
                    path: /tmp/.buildx-cache
                    key: ${{ runner.os }}-buildx-${{ github.sha }}
                    restore-keys: |
                        ${{ runner.os }}-buildx-

            -   name: Docker Buildx (build)
                run: |
                    docker buildx build \
                        --cache-from "type=local,src=/tmp/.buildx-cache" \
                        --cache-to "type=local,dest=/tmp/.buildx-cache" \
                        --output "type=image,push=false" ${{ steps.prepare.outputs.buildx_args }}

            -   name: Docker Login
                if: success() && github.event_name != 'pull_request'
                env:
                    DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
                    DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
                run: |
                    echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USERNAME}" --password-stdin

            -   name: Docker Buildx (push)
                if: success()
                run: |
                    docker buildx build \
                        --cache-from "type=local,src=/tmp/.buildx-cache" \
                        --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args }}

            -   name: Docker Check Manifest
                if: success() && github.event_name != 'pull_request'
                run: |
                    docker run --rm mplatform/mquery ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}

            -   name: Trigger Downstream Builds
                if: success() && github.event_name != 'pull_request'
                run: |
                    GIT_COMMIT=`git log --format="(%h)%s" -1`

                    curl -XPOST \
                        -u "${{ secrets.REPO_DISPATCH_USER}}:${{secrets.REPO_DISPATCH_TOKEN}}" \
                        -H "Accept: application/vnd.github.everest-preview+json" \
                        -H "Content-Type: application/json" \
                        https://api.github.com/repos/geoff-coppertop/servicekiosk/dispatches \
                        --data '{"event_type": "upstream trigger - ${GIT_COMMIT}"}'

                    curl -XPOST \
                        -u "${{ secrets.REPO_DISPATCH_USER}}:${{secrets.REPO_DISPATCH_TOKEN}}" \
                        -H "Accept: application/vnd.github.everest-preview+json" \
                        -H "Content-Type: application/json" \
                        https://api.github.com/repos/geoff-coppertop/servicewifi/dispatches \
                        --data '{"event_type": "upstream trigger - ${GIT_COMMIT}"}'

                    curl -XPOST \
                        -u "${{ secrets.REPO_DISPATCH_USER}}:${{secrets.REPO_DISPATCH_TOKEN}}" \
                        -H "Accept: application/vnd.github.everest-preview+json" \
                        -H "Content-Type: application/json" \
                        https://api.github.com/repos/geoff-coppertop/serviceklipper/dispatches \
                        --data '{"event_type": "upstream trigger - ${GIT_COMMIT}"}'

                    curl -XPOST \
                        -u "${{ secrets.REPO_DISPATCH_USER}}:${{secrets.REPO_DISPATCH_TOKEN}}" \
                        -H "Accept: application/vnd.github.everest-preview+json" \
                        -H "Content-Type: application/json" \
                        https://api.github.com/repos/geoff-coppertop/serviceoctoprint/dispatches \
                        --data '{"event_type": "upstream build - ${GIT_COMMIT}"}'

            -   name: Clear
                if: always() && github.event_name != 'pull_request'
                run: |
                    rm -f ${HOME}/.docker/config.json
